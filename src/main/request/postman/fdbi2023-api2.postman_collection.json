{
	"info": {
		"_postman_id": "9c4c0384-2d75-4de3-93e3-ece0dd0664b8",
		"name": "fdbi2023-api2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4680186"
	},
	"item": [
		{
			"name": "Cidade",
			"item": [
				{
					"name": "List Cidades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cidade 1 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade1\");\r",
									"});\r",
									"pm.test(\"Cidade 2 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade2\");\r",
									"});\r",
									"pm.test(\"Cidade 3 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade3\");\r",
									"});\r",
									"pm.test(\"Retornou um array de registros\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"[\");\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"]\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData[0].id);\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}cidade/list",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Cidades by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cidade 1 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade1\");\r",
									"});\r",
									"pm.test(\"Id da cidade = 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.id);\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}cidade/get/?id=1",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"get",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Cidades by id inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Cidade 4 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade com ID 9 não encontrada.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}cidade/get/9",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"get",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Cidades by id inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}cidade/get/a",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"get",
								"a"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Cidades by id blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}cidade/get/\"\"",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"get",
								"\"\""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Cidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade4\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Cidade4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/save",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Cidade sem nome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome da cidade não fornecido.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // \"nome\": \"Cidade4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/save",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Cidade nome blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome da cidade não fornecido.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/save",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Cidade JSON nulo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dados necessários não informados\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"nome\": \"\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/save",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cidade 4 alterada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade4...\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Cidade4...\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/update/4",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"update",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cidade com POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Method Not Allowed\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Cidade4...\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/update/4",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"update",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cidade id inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade com ID 9 não encontrada.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Cidade4...\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/update/9",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"update",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cidade nome nulo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome da cidade não fornecido.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // \"nome\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/update/4",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"update",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cidade JSON nulo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dados necessários não informados\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"nome\": \"\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/update/4",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"update",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cidade nome blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome da cidade não fornecido.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}cidade/update/4",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"update",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cidades by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Cidade 4 excluída\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\":true\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}cidade/delete/4",
							"host": [
								"{{URL_BASE}}cidade"
							],
							"path": [
								"delete",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Funcionario",
			"item": [
				{
					"name": "List Funcionários",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Funcionário 1 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionario1\");\r",
									"});\r",
									"pm.test(\"Funcionário 2 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionario2\");\r",
									"});\r",
									"pm.test(\"Funcionário 3 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionario3\");\r",
									"});\r",
									"pm.test(\"Retornou um array de registros\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"[\");\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"]\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData[0].id);\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}funcionario/list",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Funcioanrios by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Funcionário 1 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionario1\");\r",
									"});\r",
									"pm.test(\"Id do Funcionário = 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.id);\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}funcionario/get/1",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Funcioanrios by id inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário 4 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionário com ID 9 não encontrado.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}funcionario/get/9",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"get",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Funcioanrios by id inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}funcionario/get/a",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"get",
								"a"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Funcioanrios by id blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}funcionario/get/\"\"",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"get",
								"\"\""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Funcionário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionario4\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\": 1,\r\n    \"nome\": \"Funcionario4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/save",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Funcionário com cidade inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade com ID 9 não encontrada.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\": 9,\r\n    \"nome\": \"Funcionario4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/save",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Funcionário com cidade inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\": \"a\",\r\n    \"nome\": \"Funcionario4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/save",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Funcionário sem cidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade ID não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // \"cidadeId\": 4,\r\n    \"nome\": \"Funcionario4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/save",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Funcionário sem nome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\": 4\r\n    // \"nome\": \"Funcionario4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/save",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Funcionário nome blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\": 4,\r\n    \"nome\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/save",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Funcionário JSON nulo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dados necessários não informados\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"cidadeId\": 4,\r\n//     \"nome\": \"\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/save",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funcionário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionario4 ***\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\":1,\r\n    \"nome\": \"Funcionario4 ***\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/update/4",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"update",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funcionário com POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Cidade 4 criada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Method Not Allowed\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\":4,\r\n    \"nome\": \"Funcionario4 ***\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/update/4",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"update",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funcionário sem cidade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cidade ID não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // \"cidadeId\":4,\r\n    \"nome\": \"Funcionario4 ***\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/update/3",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"update",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funcionário sem nome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nome não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\": 1\r\n    // \"nome\": \"Funcionario4 ***\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/update/3",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"update",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funcionário id inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário 9 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionário com ID 9 não encontrado.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\":3,\r\n    \"nome\": \"Funcionario4 ***\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/update/9",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"update",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funcionário id inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionário com ID null não encontrado\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cidadeId\":3,\r\n    \"nome\": \"Funcionario4 ***\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/update/a",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"update",
								"a"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funcionário JSON nulo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário 4 criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Dados necessários não informados\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"cidadeId\":3,\r\n//     \"nome\": \"Funcionario4 ***\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}funcionario/update/3",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"update",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Funcionário by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Funcionário 4 excluído\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\":true\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}funcionario/delete/4",
							"host": [
								"{{URL_BASE}}funcionario"
							],
							"path": [
								"delete",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reajuste",
			"item": [
				{
					"name": "List Reajustes Salários",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Reajuste 1 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"1000.5\");\r",
									"});\r",
									"pm.test(\"Reajuste 2 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"2000.5\");\r",
									"});\r",
									"pm.test(\"Reajuste 3 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"3000.5\");\r",
									"});\r",
									"pm.test(\"Retornou um array de registros\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"[\");\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"]\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData[0].id);\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/list/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"list",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Reajuste 1 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"1000.5\");\r",
									"});\r",
									"pm.test(\"Id do Reajuste = 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData.id);\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/get/1",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Reajuste 9 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Reajuste com ID 9 não encontrado.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/get/9",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"get",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Reajuste não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/get/a",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"get",
								"a"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Reajuste não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/get/\"\"",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"get",
								"\"\""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Reajuste criado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"4000.5\");\r",
									"});\r",
									"pm.test(\"Data formato correto\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"22/08/2023\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"22/08/2023\",\r\n    \"funcionarioId\": 3,\r\n    \"valorSalario\": 4000.5\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário Funcionário Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário 9 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionário com ID 9 não encontrado.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"22/08/2023\",\r\n    \"funcionarioId\": 9,\r\n    \"valorSalario\": 4000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário Funcionário id inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário com id inválido\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"22/08/2023\",\r\n    \"funcionarioId\": a,\r\n    \"valorSalario\": 4000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário Funcionário id blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário não informado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionário inválido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"22/08/2023\",\r\n    \"funcionarioId\": \"\",\r\n    \"valorSalario\": 4000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário sem Funcionário id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário não informado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Funcionário inválido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"22/08/2023\",\r\n    // \"funcionarioId\": \"\",\r\n    \"valorSalario\": 4000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário dataRegistro  blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Data não informada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Data do reajuste inválida ou não informada.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"\",\r\n    \"funcionarioId\": 3,\r\n    \"valorSalario\": 4000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário sem dataRegistro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Data não informada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Data do reajuste inválida ou não informada\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // \"dataReajuste\": \"\",\r\n    \"funcionarioId\": 3,\r\n    \"valorSalario\": 4000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário dataRegistro incorreta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Data não informada\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Data do reajuste inválida ou não informada\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"2023-08-21\",\r\n    \"funcionarioId\": 3,\r\n    \"valorSalario\": 4000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Reajuste Salário duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Reajuste já existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Reajuste salarial já existe para o funcionário na data especificada\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataReajuste\": \"22/08/2023\",\r\n    \"funcionarioId\": 3,\r\n    \"valorSalario\": 5000.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/save/",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"save",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by funcionário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Reajuste 3 existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"3000.5\");\r",
									"});\r",
									"pm.test(\"Retornou um array de registros\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"[\");\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"]\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData[0].id);\r",
									"    pm.expect(jsonData[0].id).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/funcionario/3",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"funcionario",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by funcionário id inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Funcionário 9 não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Reajustes para o funcinário 9 não encontrados.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/funcionario/9",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"funcionario",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by funcionário id inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário a não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/funcionario/a",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"funcionario",
								"a"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Reajustes Salários by funcionário id blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Funcionário a não existe\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Parâmetro fornecido com formato invalido ou não fornecido\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/funcionario/\"\"",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"funcionario",
								"\"\""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Reajustes Salários by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Reajuste excluído\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\":true\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/delete/4",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"delete",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Reajustes Salários by id inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Reajuste não encontrado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Reajuste salarial com ID 20 não encontrado.\");\r",
									"});\r",
									"pm.test(\"Retorno em JSON\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"{\");\r",
									"    pm.expect(pm.response.text()).to.include(\"}\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL_BASE}}reajusteSalario/delete/20",
							"host": [
								"{{URL_BASE}}reajusteSalario"
							],
							"path": [
								"delete",
								"20"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Application Index",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL_BASE}}",
					"host": [
						"{{URL_BASE}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL_BASE",
			"value": "http://localhost:8080/api2/",
			"type": "string"
		}
	]
}